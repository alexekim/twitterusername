{"ast":null,"code":"import _classCallCheck from \"/Users/alexkim/code/twitterusername/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/alexkim/code/twitterusername/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/alexkim/code/twitterusername/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/alexkim/code/twitterusername/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/alexkim/code/twitterusername/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/alexkim/code/twitterusername/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/alexkim/code/twitterusername/src/App.js\";\nimport React, { Component } from 'react'; // import debounce from 'lodash/debounce';\n\nimport axios from 'axios'; // import logo from './logo.svg';\n\nimport './App.css';\nimport Suggestion from './Suggestion';\nimport Loading from './Loading';\nimport Submit from './Submit';\nimport Header from './Header';\n\nvar TwitterTextArea =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TwitterTextArea, _Component);\n\n  function TwitterTextArea(props) {\n    var _this;\n\n    _classCallCheck(this, TwitterTextArea);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TwitterTextArea).call(this, props));\n    _this.state = {\n      currentInput: \"\",\n      currentSearch: \"\",\n      selected: \"\",\n      charactersLeft: 280,\n      prevSearches: {// \"da\" : [\n        //   {\"screen_name\": \"Dan\", \"profile_image_url\": \"dan.jpg\"},\n        //   {\"screen_name\": \"David\", \"profile_image_url\": \"david.jpg\"}\n        // ]\n        // ,\n        // \"sprout\" : [\n        //    {\"screen_name\": \"SproutSocial\", \"profile_image_url\": \"sprout.jpg\"},\n        //    {\"screen_name\": \"SproutSupport\", \"profile_image_url\": \"support.jpg\"}\n        // ]\n      },\n      loading: false,\n      allowXHR: true\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSelect = _this.handleSelect.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.allowXHR = _this.allowXHR.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(TwitterTextArea, [{\n    key: \"allowXHR\",\n    value: function allowXHR() {\n      //END DEBOUNCE\n      var text = document.getElementById(\"tweetTextarea\").value; // console.log(text);\n\n      this.setState({\n        allowXHR: true\n      }); // this.handleChange(\"\",text);\n\n      console.log(3, \"setTimeout is done, allowXHR is now TRUE\");\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(e, redone) {\n      var _this2 = this;\n\n      // var currentText = e.target.value;  this is the entire value of textarea\n      var currentText = \"\"; // this is the entire value of textarea\n\n      e ? currentText = e.target.value : currentText = redone; // if (e){\n      //   currentText = e.target.value;\n      // } else { e=e;  }\n\n      console.log(\"eh?\", currentText); //DEBOUNCE\n\n      this.setState({\n        allowXHR: false,\n        currentInput: currentText,\n        charactersLeft: 280 - currentText.length\n      }); // this.setState({allowXHR: false});\n\n      console.log(1, \"setState allowXHR FALSE\");\n      console.log(2, \"setTimeout to allowXHR TRUE in .5 seconds...\");\n      setTimeout(this.allowXHR, 300);\n      var currentTextArray = currentText.split(\" \"); // going to split(\" \") by each word\n      //now looking for any possible tagging and then making possible changes\n\n      for (var i = 0; i < currentTextArray.length; i++) {\n        if (/[a-zA-Z0-9]/.test(currentTextArray[i].charAt(1)) && /^(@)/.test(currentTextArray[i]) && currentTextArray[i].length >= 3 && currentTextArray[i].charAt(currentTextArray[i].length) != \" \") {\n          var results;\n\n          (function () {\n            var cleanSearch = currentTextArray[i].slice(1);\n\n            _this2.setState({\n              currentSearch: cleanSearch\n            }); //MOVING THIS OUT OF THE LOWER IF STATEMENT MAKES SURE THAT THE CURRENT SEARCH IS UPDATED, WITHOUT MAKING XHR REQUESTS TOO OFTEN\n            //dependent on state based debounce\n            // if(this.state.allowXHR){\n            // if first character is @ and second character is letter or number, continue search\n            // let cleanSearch = currentTextArray[i].slice(1);  just getting rid of the @ sign for search\n            // this.setState({ currentSearch: cleanSearch })  MOVING THIS UP\n            // CHECKING IF WE ALREADY HAVE SEARCHED THIS\n\n\n            if (!Boolean(_this2.state.prevSearches[_this2.state.currentSearch])) {\n              // never been searched before\n              // let's search for it now\n              // then get the results and store it in THIS.STATE\n              // then we're going to put that shit on the page.\n              console.log(\"1 this has never been searched before\");\n              console.log(\"2 new search!\", _this2.state.currentSearch);\n\n              if (_this2.state.allowXHR) {\n                results = [];\n\n                _this2.setState({\n                  loading: true\n                }); // for loading spinner to appear\n\n\n                axios.get(\"http://localhost:4000/twitter/user/search?username=\" + cleanSearch).then(function (res) {\n                  console.log(\"AXIOSFIRING\", cleanSearch); // console.log(res.data.users);\n\n                  var allUsers = res.data.users;\n                  var sixSuggestions = allUsers.slice(0, 6); // console.log(sixSuggestions);\n                  // looping through the 6 item array to get the info we want\n\n                  for (var k = 0; k < sixSuggestions.length; k++) {\n                    var screen_name = sixSuggestions[k].screen_name; // CUBS\n\n                    var name = sixSuggestions[k].name; // Chicago Cubs\n\n                    var verified = sixSuggestions[k].verified; // Chicago Cubs\n\n                    var profile_image_url = sixSuggestions[k].profile_image_url; //cubs.jpg\n\n                    results.push({\n                      \"screen_name\": screen_name,\n                      \"name\": name,\n                      \"verified\": verified,\n                      \"profile_image_url\": profile_image_url\n                    });\n                  }\n\n                  var thisstateprevSearches = _this2.state.prevSearches; //creating pseuedo object\n\n                  thisstateprevSearches[cleanSearch] = results; // adding to that pseudo object\n\n                  _this2.setState({\n                    prevSearches: thisstateprevSearches,\n                    loading: false\n                  }); // setting state to pseudo object\n\n                }); // END AXIOS CALL\n              } else {\n                console.warn(\"can't do XHR yet\", cleanSearch); //because debounce is happening\n              }\n            } else {\n              // this has been searched before\n              console.log(\"a: this already has been searched\", _this2.state.currentSearch);\n              console.log(\"b:so let's query this information\");\n\n              _this2.setState({\n                loading: false\n              });\n            } // } else {\n            //   console.warn(\"can't do XHR yet\", cleanSearch); because debounce is happening\n            // }\n\n          })();\n        } else {\n          // this is just a normal word being typed. NOT a tag\n          this.setState({\n            currentSearch: \"\"\n          });\n        }\n      } // END FOR LOOP THAT GOES THROUGH EACH WORD\n\n    }\n  }, {\n    key: \"handleSelect\",\n    value: function handleSelect(name) {\n      console.log(1, \"name\", name); // this.setState({ selected: name });\n      // console.log(\"1a\", this.state.selected);\n\n      var currentTextArray = this.state.currentInput.split(\" \");\n      console.log(2, \"Cta\", currentTextArray);\n\n      for (var i = 0; i < currentTextArray.length; i++) {\n        console.log(3, currentTextArray[i]);\n        console.log(4, \"@\" + this.state.currentSearch);\n\n        if (currentTextArray[i] == \"@\" + this.state.currentSearch) {\n          console.log(5, name);\n          var newversion = \"@\" + name + \" \";\n          console.log(6, newversion);\n          currentTextArray[i] = newversion;\n          console.log(7, currentTextArray[i]);\n        }\n      }\n\n      var currentTextArrayJoined = currentTextArray.join(\" \");\n      console.log(8, currentTextArrayJoined);\n      document.getElementById(\"tweetTextarea\").value = currentTextArrayJoined;\n      document.getElementById(\"tweetTextarea\").focus();\n      this.setState({\n        currentText: currentTextArrayJoined\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      // console.log(\"render=====\");\n      // console.log(Boolean(this.state.currentSearch));\n      // console.log(this.state.currentSearch);\n      // console.log(this.state.prevSearches[this.state.currentSearch]);\n      if (this.state.currentSearch) {\n        var currentSearch = this.state.currentSearch;\n        var dataArray = this.state.prevSearches[currentSearch]; // console.log(\"dataArray\", dataArray);\n\n        if (dataArray) {\n          // console.log(\"aaa\");\n          var displaySuggestions = dataArray.map(function (user, index) {\n            return React.createElement(Suggestion, {\n              screen_name: user.screen_name,\n              name: user.name,\n              src: user.profile_image_url,\n              verified: user.verified,\n              onSelect: _this3.handleSelect,\n              key: index,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 177\n              },\n              __self: this\n            });\n          });\n        } else {\n          // console.log(\"bbb\");\n          var displaySuggestions = \"\";\n        }\n      } else {// console.log(\"not yet\");\n      }\n\n      return React.createElement(\"div\", {\n        id: \"app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"tweetContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"tweetTextareaDiv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        type: \"text\",\n        id: \"tweetTextarea\",\n        onChange: this.handleChange,\n        autoFocus: \"autoFocus\",\n        maxLength: \"280\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        id: \"charLeft\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, this.state.charactersLeft), React.createElement(Submit, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      })), React.createElement(Loading, {\n        loading: this.state.loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"displaySuggestions\",\n        role: \"listbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, displaySuggestions))));\n    }\n  }]);\n\n  return TwitterTextArea;\n}(Component);\n\nexport default TwitterTextArea;","map":{"version":3,"sources":["/Users/alexkim/code/twitterusername/src/App.js"],"names":["React","Component","axios","Suggestion","Loading","Submit","Header","TwitterTextArea","props","state","currentInput","currentSearch","selected","charactersLeft","prevSearches","loading","allowXHR","handleChange","bind","handleSelect","text","document","getElementById","value","setState","console","log","e","redone","currentText","target","length","setTimeout","currentTextArray","split","i","test","charAt","results","cleanSearch","slice","Boolean","get","then","res","allUsers","data","users","sixSuggestions","k","screen_name","name","verified","profile_image_url","push","thisstateprevSearches","warn","newversion","currentTextArrayJoined","join","focus","dataArray","displaySuggestions","map","user","index"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n// import debounce from 'lodash/debounce';\nimport axios from 'axios';\n// import logo from './logo.svg';\nimport './App.css';\nimport Suggestion from './Suggestion';\nimport Loading from './Loading';\nimport Submit from './Submit';\nimport Header from './Header';\n\nclass TwitterTextArea extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentInput: \"\",\n      currentSearch: \"\",\n      selected: \"\",\n      charactersLeft: 280,\n\n      prevSearches: {\n        // \"da\" : [\n        //   {\"screen_name\": \"Dan\", \"profile_image_url\": \"dan.jpg\"},\n        //   {\"screen_name\": \"David\", \"profile_image_url\": \"david.jpg\"}\n        // ]\n        // ,\n        // \"sprout\" : [\n        //    {\"screen_name\": \"SproutSocial\", \"profile_image_url\": \"sprout.jpg\"},\n        //    {\"screen_name\": \"SproutSupport\", \"profile_image_url\": \"support.jpg\"}\n        // ]\n      },\n      loading: false,\n      allowXHR: true\n\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSelect = this.handleSelect.bind(this);\n    this.allowXHR = this.allowXHR.bind(this);\n  }\n  allowXHR() {\n    //END DEBOUNCE\n    var text = document.getElementById(\"tweetTextarea\").value;\n    // console.log(text);\n    this.setState({allowXHR: true});\n    // this.handleChange(\"\",text);\n    console.log(3, \"setTimeout is done, allowXHR is now TRUE\");\n  }\n  handleChange(e, redone) {\n    // var currentText = e.target.value;  this is the entire value of textarea\n    var currentText = \"\"; // this is the entire value of textarea\n    e\n      ? currentText = e.target.value\n      : currentText = redone;\n    // if (e){\n    //   currentText = e.target.value;\n    // } else { e=e;  }\n    console.log(\"eh?\", currentText);\n\n    //DEBOUNCE\n    this.setState({\n      allowXHR: false,\n      currentInput: currentText,\n      charactersLeft: 280 - currentText.length\n    });\n    // this.setState({allowXHR: false});\n    console.log(1, \"setState allowXHR FALSE\");\n    console.log(2, \"setTimeout to allowXHR TRUE in .5 seconds...\");\n\n    setTimeout(this.allowXHR, 300);\n\n    var currentTextArray = currentText.split(\" \");\n    // going to split(\" \") by each word\n    //now looking for any possible tagging and then making possible changes\n    for (var i = 0; i < currentTextArray.length; i++) {\n\n      if (/[a-zA-Z0-9]/.test(currentTextArray[i].charAt(1)) && /^(@)/.test(currentTextArray[i]) && currentTextArray[i].length >= 3 && currentTextArray[i].charAt(currentTextArray[i].length) != \" \") {\n\n        let cleanSearch = currentTextArray[i].slice(1);\n        this.setState({currentSearch: cleanSearch});\n        //MOVING THIS OUT OF THE LOWER IF STATEMENT MAKES SURE THAT THE CURRENT SEARCH IS UPDATED, WITHOUT MAKING XHR REQUESTS TOO OFTEN\n\n        //dependent on state based debounce\n        // if(this.state.allowXHR){\n\n        // if first character is @ and second character is letter or number, continue search\n\n        // let cleanSearch = currentTextArray[i].slice(1);  just getting rid of the @ sign for search\n        // this.setState({ currentSearch: cleanSearch })  MOVING THIS UP\n\n        // CHECKING IF WE ALREADY HAVE SEARCHED THIS\n        if (!Boolean(this.state.prevSearches[this.state.currentSearch])) {\n          // never been searched before\n          // let's search for it now\n          // then get the results and store it in THIS.STATE\n          // then we're going to put that shit on the page.\n          console.log(\"1 this has never been searched before\");\n          console.log(\"2 new search!\", this.state.currentSearch);\n\n          if (this.state.allowXHR) {\n\n            var results = [];\n            this.setState({loading: true}); // for loading spinner to appear\n            axios.get(\"http://localhost:4000/twitter/user/search?username=\" + cleanSearch).then(res => {\n              console.log(\"AXIOSFIRING\", cleanSearch);\n              // console.log(res.data.users);\n              const allUsers = res.data.users;\n              const sixSuggestions = allUsers.slice(0, 6);\n              // console.log(sixSuggestions);\n              // looping through the 6 item array to get the info we want\n              for (let k = 0; k < sixSuggestions.length; k++) {\n                let screen_name = sixSuggestions[k].screen_name; // CUBS\n                let name = sixSuggestions[k].name; // Chicago Cubs\n                let verified = sixSuggestions[k].verified; // Chicago Cubs\n                let profile_image_url = sixSuggestions[k].profile_image_url; //cubs.jpg\n                results.push({\"screen_name\": screen_name, \"name\": name, \"verified\": verified, \"profile_image_url\": profile_image_url});\n              }\n              var thisstateprevSearches = this.state.prevSearches; //creating pseuedo object\n              thisstateprevSearches[cleanSearch] = results; // adding to that pseudo object\n              this.setState({prevSearches: thisstateprevSearches, loading: false}); // setting state to pseudo object\n\n            }) // END AXIOS CALL\n\n          } else {\n            console.warn(\"can't do XHR yet\", cleanSearch); //because debounce is happening\n          }\n\n        } else { // this has been searched before\n          console.log(\"a: this already has been searched\", this.state.currentSearch);\n          console.log(\"b:so let's query this information\");\n          this.setState({loading: false});\n        }\n        // } else {\n        //   console.warn(\"can't do XHR yet\", cleanSearch); because debounce is happening\n        // }\n\n      } else {\n        // this is just a normal word being typed. NOT a tag\n        this.setState({currentSearch: \"\"});\n      }\n    } // END FOR LOOP THAT GOES THROUGH EACH WORD\n  }\n\n  handleSelect(name) {\n    console.log(1, \"name\", name);\n    // this.setState({ selected: name });\n    // console.log(\"1a\", this.state.selected);\n    var currentTextArray = this.state.currentInput.split(\" \");\n    console.log(2, \"Cta\", currentTextArray);\n    for (var i = 0; i < currentTextArray.length; i++) {\n      console.log(3, currentTextArray[i]);\n      console.log(4, \"@\" + this.state.currentSearch);\n      if (currentTextArray[i] == (\"@\" + this.state.currentSearch)) {\n        console.log(5, name);\n        var newversion = \"@\" + name + \" \"\n        console.log(6, newversion);\n        currentTextArray[i] = newversion;\n        console.log(7, currentTextArray[i]);\n      }\n    }\n    var currentTextArrayJoined = currentTextArray.join(\" \");\n    console.log(8, currentTextArrayJoined);\n    document.getElementById(\"tweetTextarea\").value = currentTextArrayJoined;\n    document.getElementById(\"tweetTextarea\").focus();\n    this.setState({currentText: currentTextArrayJoined});\n\n  }\n  render() {\n    // console.log(\"render=====\");\n    // console.log(Boolean(this.state.currentSearch));\n    // console.log(this.state.currentSearch);\n    // console.log(this.state.prevSearches[this.state.currentSearch]);\n    if (this.state.currentSearch) {\n      var currentSearch = this.state.currentSearch;\n      var dataArray = this.state.prevSearches[currentSearch];\n      // console.log(\"dataArray\", dataArray);\n      if (dataArray) {\n        // console.log(\"aaa\");\n        var displaySuggestions = dataArray.map((user, index) => <Suggestion screen_name={user.screen_name} name={user.name} src={user.profile_image_url} verified={user.verified} onSelect={this.handleSelect} key={index}/>)\n      } else {\n        // console.log(\"bbb\");\n        var displaySuggestions = \"\";\n      }\n    } else {\n      // console.log(\"not yet\");\n    }\n\n    return (<div id=\"app\">\n      <Header/>\n      <div id=\"tweetContainer\">\n        <div id=\"tweetTextareaDiv\">\n          <textarea type=\"text\" id=\"tweetTextarea\" onChange={this.handleChange} autoFocus=\"autoFocus\" maxLength=\"280\"></textarea>\n          <p id=\"charLeft\">{this.state.charactersLeft}</p>\n          <Submit/>\n        </div>\n        <Loading loading={this.state.loading}/>\n        <div>\n          <div id=\"displaySuggestions\" role=\"listbox\">{displaySuggestions}</div>\n        </div>\n      </div>\n    </div>);\n  }\n}\n\nexport default TwitterTextArea;\n"]},"metadata":{},"sourceType":"module"}