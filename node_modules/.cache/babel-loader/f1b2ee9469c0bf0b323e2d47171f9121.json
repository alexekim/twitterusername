{"ast":null,"code":"import _classCallCheck from \"/Users/alexkim/code/twitterusername/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/alexkim/code/twitterusername/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/alexkim/code/twitterusername/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/alexkim/code/twitterusername/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/alexkim/code/twitterusername/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/alexkim/code/twitterusername/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/alexkim/code/twitterusername/src/App.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios'; // import logo from './logo.svg';\n\nimport './App.css';\nimport Suggestion from './Suggestion';\nimport Loading from './Loading';\nimport Submit from './Submit';\nimport Header from './Header';\n\nvar TwitterTextArea =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TwitterTextArea, _Component);\n\n  function TwitterTextArea(props) {\n    var _this;\n\n    _classCallCheck(this, TwitterTextArea);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TwitterTextArea).call(this, props));\n    _this.state = {\n      currentInput: \"\",\n      currentSearch: \"\",\n      selected: \"\",\n      charactersLeft: 280,\n      prevSearches: {// \"sprout\" : [\n        //    {\"screen_name\": \"SproutSocial\", \"profile_image_url\": \"sprout.jpg\"},\n        //    {\"screen_name\": \"SproutSupport\", \"profile_image_url\": \"support.jpg\"}\n        // ]\n      },\n      loading: false,\n      searchingNow: false,\n      allowXHR: true\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSelect = _this.handleSelect.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.allowXHR = _this.allowXHR.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(TwitterTextArea, [{\n    key: \"allowXHR\",\n    value: function allowXHR() {\n      //END DEBOUNCE\n      this.setState({\n        allowXHR: true\n      }); // console.log(2, \"setTimeout is done, allowXHR is now TRUE\");\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      var _this2 = this;\n\n      var currentText = e.target.value; // this is the entire value of textarea\n      //DEBOUNCE\n\n      this.setState({\n        allowXHR: false,\n        currentInput: currentText,\n        charactersLeft: 280 - currentText.length\n      }); // console.log(1, \"setState allowXHR FALSE: \");\n      // console.log(2, \"setTimeout to allowXHR TRUE in .5 seconds...\");\n\n      setTimeout(this.allowXHR, 250);\n      var currentTextArray = currentText.split(\" \"); // going to split(\" \") by each word\n      //now looking for any possible tagging and then making possible changes\n\n      for (var i = 0; i < currentTextArray.length; i++) {\n        if (/[a-zA-Z0-9_]/.test(currentTextArray[i].charAt(1)) && /^(@)/.test(currentTextArray[i]) && currentTextArray[i].length >= 3 && currentTextArray[i].charAt(currentTextArray[i].length) !== \" \") {\n          var results;\n\n          (function () {\n            var cleanSearch = currentTextArray[i].slice(1); // just getting rid of the @ sign for search\n\n            _this2.setState({\n              currentSearch: cleanSearch,\n              searchingNow: true\n            });\n\n            console.log(1, cleanSearch, \"is a valid search\"); //dependent on state based debounce\n            // CHECKING IF WE ALREADY HAVE SEARCHED THIS\n\n            if (!Boolean(_this2.state.prevSearches[cleanSearch])) {\n              // let's search for it now\n              // then get the results and store it in THIS.STATE\n              // then we're going to put that shit on the page.\n              console.log(\"2A and it,\", cleanSearch, \" has never been searched before\");\n\n              if (_this2.state.allowXHR) {\n                _this2.setState({\n                  loading: true\n                }); // if first character is @ and second character is letter or number\n                //continue search\n\n\n                results = [];\n                console.warn(\"3A: and XHR is allowed right now. about to do AXIOS with:\", cleanSearch);\n                axios.get(\"/twitter/user/search?username=\" + cleanSearch).then(function (res) {\n                  // console.log(res.data.users);\n                  var allUsers = res.data.users;\n                  var sixSuggestions = allUsers.slice(0, 6); // console.log(sixSuggestions);\n                  // looping through the 6 item array to get the info we want\n\n                  for (var k = 0; k < sixSuggestions.length; k++) {\n                    var screen_name = sixSuggestions[k].screen_name; // CUBS\n\n                    var name = sixSuggestions[k].name; // Chicago Cubs\n\n                    var verified = sixSuggestions[k].verified; // Chicago Cubs\n\n                    var profile_image_url = sixSuggestions[k].profile_image_url; //cubs.jpg\n\n                    results.push({\n                      \"screen_name\": screen_name,\n                      \"name\": name,\n                      \"verified\": verified,\n                      \"profile_image_url\": profile_image_url\n                    });\n                  }\n\n                  var thisstateprevSearches = _this2.state.prevSearches; //creating pseuedo object\n\n                  thisstateprevSearches[cleanSearch] = results; // adding to that pseudo object\n\n                  _this2.setState({\n                    prevSearches: thisstateprevSearches,\n                    loading: false,\n                    searchingNow: false\n                  }); // setting state to pseudo object\n\n                }); // END AXIOS CALL\n              } else {\n                console.warn(\"3B: but we can't do XHR yet:\", cleanSearch, \"did NOT get searched.\");\n\n                _this2.setState({\n                  searchingNow: false\n                });\n              }\n            } else {\n              _this2.setState({\n                loading: false,\n                searchingNow: false\n              });\n\n              console.log(\"@2B\", cleanSearch, \" and it has already has been searched. now checking state for info we already have. no XHR request needed!\");\n            }\n          })();\n        } else {\n          // this is just a normal word being typed. NOT a tag\n          this.setState({\n            currentSearch: \"\"\n          });\n        }\n      } // END FOR LOOP THAT GOES THROUGH EACH WORD\n\n    }\n  }, {\n    key: \"handleSelect\",\n    value: function handleSelect(name) {\n      console.log(1, \"name\", name); // this.setState({ selected: name });\n      // console.log(\"1a\", this.state.selected);\n\n      var currentTextArray = this.state.currentInput.split(\" \");\n      console.log(2, \"Cta\", currentTextArray);\n\n      for (var i = 0; i < currentTextArray.length; i++) {\n        console.log(3, currentTextArray[i]);\n        console.log(4, \"@\" + this.state.currentSearch);\n\n        if (currentTextArray[i] === \"@\" + this.state.currentSearch) {\n          console.log(5, name);\n          var newversion = \"@\" + name + \" \";\n          console.log(6, newversion);\n          currentTextArray[i] = newversion;\n          console.log(7, currentTextArray[i]);\n        }\n      }\n\n      var currentTextArrayJoined = currentTextArray.join(\" \");\n      console.log(8, currentTextArrayJoined);\n      document.getElementById(\"tweetTextarea\").value = currentTextArrayJoined;\n      document.getElementById(\"tweetTextarea\").focus();\n      this.setState({\n        currentInput: currentTextArrayJoined,\n        currentSearch: \"\"\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      // console.log(\"render=====\");\n      // console.log(Boolean(this.state.currentSearch));\n      // console.log(this.state.currentSearch);\n      // console.log(this.state.prevSearches[this.state.currentSearch]);\n      if (this.state.currentSearch) {\n        var currentSearch = this.state.currentSearch;\n        var dataArray = this.state.prevSearches[currentSearch]; // console.log(\"dataArray\", dataArray);\n\n        if (dataArray) {\n          // console.log(\"aaa\");\n          var displaySuggestions = dataArray.map(function (user, index) {\n            return React.createElement(Suggestion, {\n              screen_name: user.screen_name,\n              name: user.name,\n              src: user.profile_image_url,\n              verified: user.verified,\n              onSelect: _this3.handleSelect,\n              key: index,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 159\n              },\n              __self: this\n            });\n          });\n        } else {\n          // console.log(\"bbb\");\n          var displaySuggestions = \"\";\n        }\n      } else {// console.log(\"not yet\");\n      }\n\n      return React.createElement(\"div\", {\n        id: \"app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"tweetContainer\",\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"tweetTextareaDiv\",\n        className: \"col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        type: \"text\",\n        id: \"tweetTextarea\",\n        onChange: this.handleChange,\n        maxLength: \"280\",\n        tabIndex: \"0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        id: \"charLeft\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, this.state.charactersLeft), React.createElement(Submit, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      })), React.createElement(Loading, {\n        loading: this.state.loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"displaySuggestions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, displaySuggestions))));\n    }\n  }]);\n\n  return TwitterTextArea;\n}(Component);\n\nexport default TwitterTextArea;","map":{"version":3,"sources":["/Users/alexkim/code/twitterusername/src/App.js"],"names":["React","Component","axios","Suggestion","Loading","Submit","Header","TwitterTextArea","props","state","currentInput","currentSearch","selected","charactersLeft","prevSearches","loading","searchingNow","allowXHR","handleChange","bind","handleSelect","setState","e","currentText","target","value","length","setTimeout","currentTextArray","split","i","test","charAt","results","cleanSearch","slice","console","log","Boolean","warn","get","then","res","allUsers","data","users","sixSuggestions","k","screen_name","name","verified","profile_image_url","push","thisstateprevSearches","newversion","currentTextArrayJoined","join","document","getElementById","focus","dataArray","displaySuggestions","map","user","index"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\n// import logo from './logo.svg';\nimport './App.css';\nimport Suggestion from './Suggestion';\nimport Loading from './Loading';\nimport Submit from './Submit';\nimport Header from './Header';\n\nclass TwitterTextArea extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentInput: \"\",\n      currentSearch: \"\",\n      selected: \"\",\n      charactersLeft: 280,\n\n      prevSearches : {\n         // \"sprout\" : [\n         //    {\"screen_name\": \"SproutSocial\", \"profile_image_url\": \"sprout.jpg\"},\n         //    {\"screen_name\": \"SproutSupport\", \"profile_image_url\": \"support.jpg\"}\n         // ]\n       },\n       loading: false,\n       searchingNow: false,\n       allowXHR: true\n\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSelect = this.handleSelect.bind(this);\n    this.allowXHR = this.allowXHR.bind(this);\n  }\n  allowXHR(){\n    //END DEBOUNCE\n    this.setState({ allowXHR: true});\n    // console.log(2, \"setTimeout is done, allowXHR is now TRUE\");\n  }\n  handleChange(e) {\n    var currentText = e.target.value; // this is the entire value of textarea\n\n    //DEBOUNCE\n    this.setState({\n      allowXHR: false,\n\n      currentInput: currentText,\n      charactersLeft: 280 - currentText.length\n    });\n    // console.log(1, \"setState allowXHR FALSE: \");\n    // console.log(2, \"setTimeout to allowXHR TRUE in .5 seconds...\");\n    setTimeout(this.allowXHR, 250);\n\n    var currentTextArray = currentText.split(\" \");\n    // going to split(\" \") by each word\n    //now looking for any possible tagging and then making possible changes\n    for (var i = 0; i < currentTextArray.length; i++) {\n\n\n      if (/[a-zA-Z0-9_]/.test(currentTextArray[i].charAt(1)) && /^(@)/.test(currentTextArray[i]) && currentTextArray[i].length >= 3 && currentTextArray[i].charAt(currentTextArray[i].length) !== \" \") {\n\n        let cleanSearch = currentTextArray[i].slice(1); // just getting rid of the @ sign for search\n        this.setState({ currentSearch: cleanSearch, searchingNow: true })\n        console.log(1, cleanSearch, \"is a valid search\");\n\n        //dependent on state based debounce\n\n          // CHECKING IF WE ALREADY HAVE SEARCHED THIS\n          if ( !Boolean(this.state.prevSearches[cleanSearch]) ) {\n            // let's search for it now\n            // then get the results and store it in THIS.STATE\n            // then we're going to put that shit on the page.\n            console.log(\"2A and it,\", cleanSearch, \" has never been searched before\");\n            if(this.state.allowXHR){\n              this.setState({loading: true});\n              // if first character is @ and second character is letter or number\n              //continue search\n\n              var results = [];\n              console.warn(\"3A: and XHR is allowed right now. about to do AXIOS with:\", cleanSearch);\n\n              axios.get(\"/twitter/user/search?username=\" + cleanSearch)\n              .then(res => {\n                // console.log(res.data.users);\n                const allUsers = res.data.users;\n                const sixSuggestions = allUsers.slice(0, 6);\n                // console.log(sixSuggestions);\n                // looping through the 6 item array to get the info we want\n                for (let k = 0; k < sixSuggestions.length; k++) {\n                  let screen_name = sixSuggestions[k].screen_name;  // CUBS\n                  let name = sixSuggestions[k].name;  // Chicago Cubs\n                  let verified = sixSuggestions[k].verified;  // Chicago Cubs\n                  let profile_image_url = sixSuggestions[k].profile_image_url; //cubs.jpg\n                  results.push({\"screen_name\": screen_name, \"name\": name, \"verified\": verified, \"profile_image_url\": profile_image_url});\n                }\n                var thisstateprevSearches = this.state.prevSearches; //creating pseuedo object\n                thisstateprevSearches[cleanSearch] = results;  // adding to that pseudo object\n                this.setState({ prevSearches : thisstateprevSearches, loading: false, searchingNow: false});  // setting state to pseudo object\n\n              }) // END AXIOS CALL\n\n            } else {\n              console.warn(\"3B: but we can't do XHR yet:\", cleanSearch, \"did NOT get searched.\");\n              this.setState({searchingNow: false})\n            }\n          } else {\n            this.setState({loading: false, searchingNow: false});\n            console.log(\"@2B\", cleanSearch, \" and it has already has been searched. now checking state for info we already have. no XHR request needed!\");\n          }\n\n\n\n\n\n\n      } else {\n        // this is just a normal word being typed. NOT a tag\n        this.setState({currentSearch: \"\"});\n      }\n    }// END FOR LOOP THAT GOES THROUGH EACH WORD\n  }\n\n  handleSelect(name){\n    console.log(1, \"name\", name);\n    // this.setState({ selected: name });\n    // console.log(\"1a\", this.state.selected);\n    var currentTextArray = this.state.currentInput.split(\" \");\n    console.log(2, \"Cta\", currentTextArray);\n    for (var i = 0; i < currentTextArray.length; i++) {\n      console.log(3, currentTextArray[i]);\n      console.log(4, \"@\"+this.state.currentSearch);\n      if( currentTextArray[i] === (\"@\"+this.state.currentSearch) ){\n        console.log(5, name);\n        var newversion = \"@\"+name+\" \";\n        console.log(6, newversion);\n        currentTextArray[i] = newversion;\n        console.log(7, currentTextArray[i]);\n      }\n    }\n    var currentTextArrayJoined = currentTextArray.join(\" \");\n    console.log(8, currentTextArrayJoined);\n    document.getElementById(\"tweetTextarea\").value = currentTextArrayJoined;\n    document.getElementById(\"tweetTextarea\").focus();\n    this.setState({ currentInput: currentTextArrayJoined, currentSearch: \"\" });\n\n  }\n  render() {\n    // console.log(\"render=====\");\n    // console.log(Boolean(this.state.currentSearch));\n    // console.log(this.state.currentSearch);\n    // console.log(this.state.prevSearches[this.state.currentSearch]);\n    if (this.state.currentSearch) {\n      var currentSearch = this.state.currentSearch;\n      var dataArray = this.state.prevSearches[currentSearch];\n      // console.log(\"dataArray\", dataArray);\n      if(dataArray){\n        // console.log(\"aaa\");\n        var displaySuggestions =  dataArray.map((user, index) =>\n          <Suggestion screen_name={user.screen_name} name={user.name} src={user.profile_image_url} verified={user.verified} onSelect={this.handleSelect} key={index}/>\n        )\n      } else{\n        // console.log(\"bbb\");\n        var displaySuggestions = \"\";\n      }\n    } else {\n      // console.log(\"not yet\");\n    }\n\n\n    return (\n      <div id=\"app\">\n        <Header/>\n        <div id=\"tweetContainer\" className=\"row\">\n          <div id=\"tweetTextareaDiv\" className=\"col s12\">\n            <textarea\n              type=\"text\"\n              id=\"tweetTextarea\"\n              onChange={this.handleChange}\n              maxLength=\"280\"\n              tabIndex=\"0\">\n              </textarea>\n              <p id=\"charLeft\">{this.state.charactersLeft}</p>\n              <Submit />\n            </div>\n            <Loading loading={this.state.loading}/>\n\n            <div>\n              <div id=\"displaySuggestions\">{displaySuggestions}</div>\n            </div>\n          </div>\n      </div>);\n      }\n    }\n\nexport default TwitterTextArea;\n"]},"metadata":{},"sourceType":"module"}